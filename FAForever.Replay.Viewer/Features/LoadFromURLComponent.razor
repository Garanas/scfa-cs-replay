
@inherits ReactiveComponentBase;

@inject ReplayService replayService;
@inject HttpClient HttpClient;
@inject ISnackbar Snackbar;

<MudStack Style="width: 100%; height: 100%">
    <MudTextField @bind-Value="@_replayId" Label="Replay ID" Variant="Variant.Outlined" Clearable="true" Counter="12" Immediate="true" HelperText="A Replay ID, e.g. 23031279" />

    <MudToolBar Gutters="@false" Class="relative d-flex justify-end gap-4">
        <MudButton Color="Color.Primary"
                   Disabled="@(_replayId == null)"
                   OnClick="@Upload"
                   Variant="Variant.Filled">
            Load
        </MudButton>
        <MudButton Color="Color.Error"
                   Disabled="@(_replayId == null)"
                   OnClick="@Clear"
                   Variant="Variant.Filled">
            Clear
        </MudButton>
    </MudToolBar>
</MudStack>

@code {
#nullable enable
    private string? _replayId = null;

    private async Task<bool> LoadFromURL(string url)
    {
        try
        {
            // https://replay.faforever.com/23031279
            // remove #
            if (url.StartsWith("#"))
            {
                url = url.Substring(1);
            }

            if (!url.All(char.IsDigit))
            {
                return false;
            }

            var response = await HttpClient.GetByteArrayAsync($"https://replay.faforever.com/{url}");
            MemoryStream stream = new MemoryStream();
            //replayService.LoadFAForeverReplay(stream);
            return true;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            return false;
        }

        return true;
    }

    private async Task Upload()
    {
        if (_replayId != null)
        {
            var success = await LoadFromURL(_replayId);
            if (!success)
            {
                Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
                Snackbar.Add("Failed to load!", Severity.Error);
            }
            return;
        }

        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Add("Nothing to load!", Severity.Info);
    }

    private void Clear()
    {
        this._replayId = null;
    }
}